/* Escolhendo um Banco de Dados */
USE
	COMERCIO_OLTP
GO


/* Preenchendo a Tabela Item de Nota */
DECLARE
	@ID_PRODUTO INT,
	@ID_NOTA_FISCAL INT,
	@QUANTIDADE INT,
	@VALOR NUMERIC(10,2),
	@TOTAL NUMERIC(10,2)

BEGIN
	SET @ID_PRODUTO =
	(SELECT TOP 1 IDPRODUTO FROM PRODUTO ORDER BY NEWID())

	SET @ID_NOTA_FISCAL =
	(SELECT TOP 1 IDNOTA FROM NOTA_FISCAL ORDER BY NEWID())

	SET @QUANTIDADE = (SELECT ROUND(RAND() * 4 + 1, 0))

	SET @VALOR = (SELECT VALOR FROM PRODUTO WHERE IDPRODUTO = @ID_PRODUTO)

	SET @TOTAL = @QUANTIDADE * @VALOR

	INSERT INTO ITEM_NOTA(ID_PRODUTO, ID_NOTA_FISCAL, QUANTIDADE, TOTAL)
	VALUES
	(@ID_PRODUTO, @ID_NOTA_FISCAL, @QUANTIDADE, @TOTAL)

END
GO 27000 --Vai preencher 27.000 vezes


/* Verificando as Notas que ficaram sem Item */
SELECT
	IDNOTA
FROM
	NOTA_FISCAL
WHERE
	IDNOTA
NOT IN(
	SELECT
		ID_NOTA_FISCAL
	FROM
		ITEM_NOTA)
ORDER BY
	1
GO


/* Criando um Cursor para preencher as Notas Fiscais sem Itens 
OBS - Notas preenchidas com apenas 1 Item Aleatório */
DECLARE
	C_NOTAS CURSOR FOR
	SELECT IDNOTA FROM NOTA_FISCAL
	WHERE IDNOTA NOT IN(SELECT ID_NOTA_FISCAL FROM ITEM_NOTA)

DECLARE
	@IDNOTA INT,
	@ID_PRODUTO INT,
	@TOTAL DECIMAL

OPEN C_NOTAS
FETCH NEXT FROM C_NOTAS
INTO @IDNOTA
WHILE @@FETCH_STATUS = 0
BEGIN
	SET @ID_PRODUTO = 
	(SELECT TOP 1 IDPRODUTO FROM PRODUTO ORDER BY NEWID())

	SET @TOTAL = 
	(SELECT VALOR FROM PRODUTO WHERE IDPRODUTO = @ID_PRODUTO)

	INSERT INTO ITEM_NOTA(ID_PRODUTO, ID_NOTA_FISCAL, QUANTIDADE, TOTAL)
	VALUES(@ID_PRODUTO, @IDNOTA, 1, @TOTAL)

FETCH NEXT FROM C_NOTAS
INTO @IDNOTA

END

CLOSE C_NOTAS
DEALLOCATE C_NOTAS
GO


/* Criando uma Procedure */
CREATE PROCEDURE CAD_NOTAS AS 
DECLARE
	C_NOTAS CURSOR FOR
	SELECT IDNOTA FROM NOTA_FISCAL
	WHERE IDNOTA NOT IN(SELECT ID_NOTA_FISCAL FROM ITEM_NOTA)

DECLARE
	@IDNOTA INT,
	@ID_PRODUTO INT,
	@TOTAL DECIMAL

OPEN C_NOTAS
FETCH NEXT FROM C_NOTAS
INTO @IDNOTA
WHILE @@FETCH_STATUS = 0
BEGIN
	SET @ID_PRODUTO = 
	(SELECT TOP 1 IDPRODUTO FROM PRODUTO ORDER BY NEWID())

	SET @TOTAL = 
	(SELECT VALOR FROM PRODUTO WHERE IDPRODUTO = @ID_PRODUTO)

	INSERT INTO ITEM_NOTA(ID_PRODUTO, ID_NOTA_FISCAL, QUANTIDADE, TOTAL)
	VALUES(@ID_PRODUTO, @IDNOTA, 1, @TOTAL)

FETCH NEXT FROM C_NOTAS
INTO @IDNOTA

END

CLOSE C_NOTA


/* Criando uma View */
CREATE VIEW V_ITEM_NOTA AS
SELECT
	ID_NOTA_FISCAL AS "NOTA FISCAL",
	PRODUTO,
	VALOR,
	QUANTIDADE,
	TOTAL AS "TOTAL DO ITEM"
FROM
	PRODUTO
INNER JOIN
	ITEM_NOTA
ON
	IDPRODUTO = ID_PRODUTO


/* Chamando uma View */
SELECT
	*
FROM
	V_ITEM_NOTA
ORDER BY
	1
GO


/* Consultando os Dados da Tabela Cliente, Nota Fiscal, Item Nota e Produto */
SELECT
	C.NOME,
	C.SOBRENOME,
	C.SEXO,
	N.DATA,
	N.IDNOTA,
	P.PRODUTO,
	N.TOTAL
FROM
	CLIENTE C
INNER JOIN
	NOTA_FISCAL N
ON
	C.IDCLIENTE = N.ID_CLIENTE
INNER JOIN
	ITEM_NOTA I
ON
	N.IDNOTA = I.ID_NOTA_FISCAL
INNER JOIN
	PRODUTO P
ON
	P.IDPRODUTO = I.ID_PRODUTO
ORDER BY
	IDNOTA
GO